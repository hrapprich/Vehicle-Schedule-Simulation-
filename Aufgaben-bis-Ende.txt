offene Punkte:
(x) Einleseroutine für gegebene Daten fertigstellen (svenno)
(x) Dokumentation über benötigte Daten für Simulation (Dictionarys beschreiben)
(x) Daten für Störungen aus GUI-Eingabe ziehen
(x) Entscheidung dem Benutzer offen lassen: Pufferzeiten für Abbau Verspätungen nutzen oder nicht (chris)
(x) In Output Verspätungsursache aufnehmen (vlt durch Klassifikation und Ausgabe einer Zahl)
(x) Störungen auf drei Ebenen: Einzelfahrt, Strecke/Umkreis, Global (chris)
(x) Stau einfügen (gehört zu Störebene Strecke)
(x) smartere Stau-Funktion mit dynamischen Vorkommen
(x) Staus lokalisieren
(x) Verspätungen in relative Werte umwandeln
(x) mehr und validere Störungsarten
(x) "Interface" für Störungen
(x) Funktionen verschachteln (Grundfunktionen (wie z.B. Stau), die von Spezialfunktionen getriggert werden)
(x) GUI optimieren/verschönern
(x) Störungen aufräumen und mit GUI verknüpfen
(x) Prioliste erstellen (was muss bis wann stehen?)
(x) Störungsursache für Pausen removen

Prioliste:
(x) Störungen zum Laufen bringen
(x) Fahrerstörungen raus
( ) Unfallstörung & Fahrzeugausfall (Depot & während der Fahrt fixen)
( ) KPIs einfügen
  (x) Pünktlichkeit: Anteil und Anzahl an pünktlichen Fahrten (Ist-Soll = 0)
  ( ) Verspätungspropagation (Formel in Word)
    Frage: ist das Ergebnis nicht immer: Pufferzeit - delayTime (Gesamtverspätung), wenn ja:
            dann können wir das wahrscheinlich mit der breaktime-Funktion ausgeben lassen
  ( ) Wirkungsgrade: 
    (x) wieviel Prozent der Zeit sind Servicefahrten und Leerfahrten
    ( ) wieviel Prozent der Strecke sind SF und LF (Distanz in tableFinal einfügen)
( ) Dateninkonsistenzen ausbessern
( ) Event mit Zeitspanne, die man in GUI festlegen kann
( ) ElementType == 8 als Pause (Entscheidung, ob Pause genutzt werden soll, in GUI)
( ) Überlegungen: dispositive Entscheidung: Abbruchbindung 
  ( ) wieviele Fahrzeuge haben nur einen Teilumlauf? hier wirken dispositive Entscheidungen nicht
( ) Staufunktion auskommentieren
( ) Simulationsdauer auf eine Woche ausweiten
( ) Dokumentation über tablefinal.csv (svenno)
( ) Code objektorientiert gestalten

( ) Personaldaten konzeptionell mitdenken bzw. Schnittstelle einfügen

( ) PK1 Paper lesen / Fokus auf Suchprozess




